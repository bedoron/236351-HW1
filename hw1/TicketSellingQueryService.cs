//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketSellingServer
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Flights", Namespace="http://schemas.datacontract.org/2004/07/TicketSellingServer", ItemName="Flight")]
    public class Flights : System.Collections.Generic.List<TicketSellingServer.Flight>
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/TicketSellingServer")]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime dateField;
        
        private string dstField;
        
        private string flightNumberField;
        
        private int priceField;
        
        private int seatsField;
        
        private string srcField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dst
        {
            get
            {
                return this.dstField;
            }
            set
            {
                this.dstField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flightNumber
        {
            get
            {
                return this.flightNumberField;
            }
            set
            {
                this.flightNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int price
        {
            get
            {
                return this.priceField;
            }
            set
            {
                this.priceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int seats
        {
            get
            {
                return this.seatsField;
            }
            set
            {
                this.seatsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string src
        {
            get
            {
                return this.srcField;
            }
            set
            {
                this.srcField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightSearchReservationRequest", Namespace="http://schemas.datacontract.org/2004/07/TicketSellingServer")]
    public partial class FlightSearchReservationRequest : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime dateField;
        
        private string flightNumberField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string flightNumber
        {
            get
            {
                return this.flightNumberField;
            }
            set
            {
                this.flightNumberField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITicketSellingQueryService")]
public interface ITicketSellingQueryService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketSellingQueryService/GetFlights", ReplyAction="http://tempuri.org/ITicketSellingQueryService/GetFlightsResponse")]
    TicketSellingServer.Flights GetFlights(string src, string dst, string date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketSellingQueryService/GetFlights", ReplyAction="http://tempuri.org/ITicketSellingQueryService/GetFlightsResponse")]
    System.Threading.Tasks.Task<TicketSellingServer.Flights> GetFlightsAsync(string src, string dst, string date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketSellingQueryService/MakeReservation", ReplyAction="http://tempuri.org/ITicketSellingQueryService/MakeReservationResponse")]
    int MakeReservation(TicketSellingServer.FlightSearchReservationRequest request);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketSellingQueryService/MakeReservation", ReplyAction="http://tempuri.org/ITicketSellingQueryService/MakeReservationResponse")]
    System.Threading.Tasks.Task<int> MakeReservationAsync(TicketSellingServer.FlightSearchReservationRequest request);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketSellingQueryService/CancelReservation", ReplyAction="http://tempuri.org/ITicketSellingQueryService/CancelReservationResponse")]
    void CancelReservation(string reservationID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketSellingQueryService/CancelReservation", ReplyAction="http://tempuri.org/ITicketSellingQueryService/CancelReservationResponse")]
    System.Threading.Tasks.Task CancelReservationAsync(string reservationID);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ITicketSellingQueryServiceChannel : ITicketSellingQueryService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TicketSellingQueryServiceClient : System.ServiceModel.ClientBase<ITicketSellingQueryService>, ITicketSellingQueryService
{
    
    public TicketSellingQueryServiceClient()
    {
    }
    
    public TicketSellingQueryServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public TicketSellingQueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TicketSellingQueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TicketSellingQueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public TicketSellingServer.Flights GetFlights(string src, string dst, string date)
    {
        return base.Channel.GetFlights(src, dst, date);
    }
    
    public System.Threading.Tasks.Task<TicketSellingServer.Flights> GetFlightsAsync(string src, string dst, string date)
    {
        return base.Channel.GetFlightsAsync(src, dst, date);
    }
    
    public int MakeReservation(TicketSellingServer.FlightSearchReservationRequest request)
    {
        return base.Channel.MakeReservation(request);
    }
    
    public System.Threading.Tasks.Task<int> MakeReservationAsync(TicketSellingServer.FlightSearchReservationRequest request)
    {
        return base.Channel.MakeReservationAsync(request);
    }
    
    public void CancelReservation(string reservationID)
    {
        base.Channel.CancelReservation(reservationID);
    }
    
    public System.Threading.Tasks.Task CancelReservationAsync(string reservationID)
    {
        return base.Channel.CancelReservationAsync(reservationID);
    }
}
